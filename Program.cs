Итоговая проверочная работа.
Описание решения
Программа расчета совокупности массивов чисел по критерию четности.

На вход подается массив чисел, вводимый с клавиатуры. Кроме ручного ввода, комплектный режим с генерацией случайных чисел.

Приглашение из консоли из программы выводит приглашение с описанием работы.

Предусмотрено несколько команд:

Команда 1: начать ввод элементов массива
Команда 2: полученный набор элементов и полученный результат
Команда 3: очистить массив
Команда 4: вычисление параметров набора случайных чисел и получение результата
Команда 5: выйти из приложения
Алгоритм использования функции фильтрации при помощи промежуточного массива (ведерка), который собирает четные числа и сливает результат в общий массив. При такой реализации получается масштабируемый метод по потреблению памяти. Подобное действие реализовано в стандартной коллекции.

Схема алгоритма функции filterEvens
Схема алгоритма основных функций.

Код функции filterEvens
int[] filterEvens(int[] array)
{
    int[] result = { };
    int[] tmpArray = new int[10];
    int tal = 0;

    for (int i = 0; i < array.Length; i++)
    {
        if (array[i] % 2 != 0)
        {
            continue;
        }
        tmpArray[tal++] = array[i];
        if (tal >= tmpArray.Length)
        {
            int oldSize = result.Length;
            Array.Resize(ref result, oldSize + tal);
            Array.ConstrainedCopy(tmpArray, 0, result, oldSize, tal);
            tal = 0;
        }
    }

    if (tal > 0)
    {
        int oldSize = result.Length;
        Array.Resize(ref result, oldSize + tal);
        Array.ConstrainedCopy(tmpArray, 0, result, oldSize, tal);
    }

    return result;
}
Постановка задачи
Эта работа требуется для проверки ваших знаний и навыков по итогам первого прохождения блока обучения на программе разработчика. Мы должны полагать, что базовое знакомство прошло успешно.

Задача: Написать программу, которая из массивных массивов формирует массивы из четных чисел. Первоначальный массив можно ввести с набора, либо сгенерировать случайным образом. Не рекомендуется использовать коллекции, лучше всего собирать уникальные массивы.

Примеры:

[1, 2, 3, 4] -> [2, 4]
[1, 3, 4, 5, 7, 1, 3] -> [4]
[2, -4, 6] -> [2, -4, 6]
[1, 3, 5] -> []
Флоу выполнения:

Создать репозиторий на GitHub.
Нарисовать блок-схему алгоритма (можно использовать блок-схему основной содержательной части, если выделить ее в отдельный метод).
Снабдить репозиторий оформленным текстовым описанием решений (файл README.md).
Напишите программу, определяющую установленную шкалу.
Использовать контрольную работу в этой работе над рассмотрением проекта (не должно быть так, что все залито комитом, как минимум этапы 2, 3 и 4 должны быть назначены в разных комитах).
